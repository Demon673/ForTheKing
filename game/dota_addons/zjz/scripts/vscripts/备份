--player.Init = false --英雄登场


function playerstarts:init(i) --创建地基

    if ((i~=4) and (i~=9)) then
        local player = PlayerResource:GetPlayer(i)  
        local n = i+1
        local team = player:GetTeam()
        PlayerS[i].Team = team
        PlayerS[i].Gold = 60000                    --定义初始金钱 600   
        PlayerResource:SetGold(i,PlayerS[i].Gold, false) --设置初始金钱   
        local lib_ent = Entities:FindByName(nil, "player_"..tostring(i).."_farmer_4")   --player_i_lib
        PlayerS[i].Lib =  CreateUnitByName("npc_dummy_lib", lib_ent:GetAbsOrigin() , false, nil,nil ,team) 
        PlayerS[i].Lib:SetControllableByPlayer(i, true)


        local pig_ent = Entities:FindByName(nil, "player_"..tostring(i).."_farmer_3")   --player_i_lib
        PlayerS[i].Pig =  CreateUnitByName("npc_dummy_pig", pig_ent:GetAbsOrigin() , false, nil,nil ,team) 
        PlayerS[i].Pig:SetControllableByPlayer(i, true)

        if player then
            local ent =  Entities:FindAllByName("player"..tostring(n)) --这里返回一个表
            print("Spawn BuildBase Done")
            PlayerS[i].BuildBase = {}                                                              --设置初始的地基
            print("playerID is  "..player:GetPlayerID() )
            PlayerS[i].buildtype = {}
            for k,supertype in pairs({"Q", "W", "E", "R", "T", "Y"}) do
                PlayerS[i].buildtype[supertype] = RandomInt(1, #AllTypes[supertype])
            end

            for x,v in pairs (ent) do
                local p = v:GetAbsOrigin()
                
                local buildbase = CreateUnitByName("npc_dummy_build_base", p, false, nil,nil,team) --地基单位
                table.insert(PlayerS[i].BuildBase, buildbase)

                buildbase:SetControllableByPlayer(i, true)

                buildbase.Score = 0 -- 兵力提升值
                buildbase.Sale = 0 -- 贩卖后退还金额
                buildbase.Food = 0
                local fake = CreateUnitByName("npc_dummy_build_fake", p, false, nil, nil,team) --假地基 装饰用

                buildbase:SetOrigin(Vector(p.x,p.y,p.z+ 13))
                fake:SetOrigin(Vector(p.x,p.y,p.z+ 13))

                playerstarts:RollBuilds(buildbase) -- （地基单位随机技能）
                
            end

            local farmer_ent = Entities:FindByName(nil, "player_"..tostring(i).."_farmer_1") 
            local farmer = CreateUnitByName("npc_dummy_farmer", farmer_ent:GetAbsOrigin() , false, nil,nil,team) 
            table.insert(PlayerS[i].Farmer, farmer)
        end 

    end

end



--====
function playerstarts:init(i,hero) --英雄登场之后准备开始运行的函数

    if ((i~=4) and (i~=8)) then

        --print("fst playerID is "..i)
                  --local player = PlayerResource:GetPlayer(i)  
        local player = hero:GetOwner() 
        player.Init = false

        local n = i+1

        PlayerS[i].Gold = 60000                    --定义初始金钱 600   
        PlayerResource:SetGold(i,PlayerS[i].Gold, false) --设置初始金钱   
        local lib_ent = Entities:FindByName(nil, "player_"..tostring(i).."_farmer_4")   --player_i_lib
        PlayerS[i].Lib =  CreateUnitByName("npc_dummy_lib", lib_ent:GetAbsOrigin() , false, hero,hero ,player:GetTeam()) 
        PlayerS[i].Lib:SetControllableByPlayer(i, true)


        local pig_ent = Entities:FindByName(nil, "player_"..tostring(i).."_farmer_3")   --player_i_lib
        PlayerS[i].Pig =  CreateUnitByName("npc_dummy_pig", pig_ent:GetAbsOrigin() , false, hero,hero ,player:GetTeam()) 
        PlayerS[i].Pig:SetControllableByPlayer(i, true)

         if i >= 5 then
            PlayerS[i].Team = right
            king_right:SetControllableByPlayer(i, true) 
            --PlayerS[i].Pig:SetForwardVector((Vector(-2000,0,0) - Vector(2000,0,0)):Normalized())--朝左
            --PlayerS[i].Lib:SetForwardVector((Vector(-2000,0,0) - Vector(2000,0,0)):Normalized())--朝左
        else
            PlayerS[i].Team = left
            king_left:SetControllableByPlayer(i, true) 
            --PlayerS[i].Pig:SetForwardVector((Vector(2000,0,0) - Vector(-2000,0,0)):Normalized())--朝右
            --PlayerS[i].Lib:SetForwardVector((Vector(2000,0,0) - Vector(-2000,0,0)):Normalized())--朝右
        end                            --设置阵营

        --table.insert( AllPlayers, i)                                                         --加入全部玩家队伍       



        if player then
            local ent =  Entities:FindAllByName("player"..tostring(i+1)) --这里返回一个表
            --print("Spawn BuildBase Done")
            PlayerS[i].BuildBase = {}                                                              --设置初始的地基
            --print("playerID is  "..player:GetPlayerID() )
            PlayerS[i].buildtype = {}
            for k,supertype in pairs({"Q", "W", "E", "R", "T", "Y"}) do
                PlayerS[i].buildtype[supertype] = RandomInt(1, #AllTypes[supertype])
            end

            for x,v in pairs (ent) do
                local p = v:GetAbsOrigin()
                
                local buildbase = CreateUnitByName("npc_dummy_build_base", p, false, hero,hero,player:GetTeam()) --地基单位
                table.insert(PlayerS[i].BuildBase, buildbase)
                --buildbase:SetOwner(hero) 
                buildbase:SetControllableByPlayer(i, true)
                --print(buildbase:GetPlayerOwnerID() )

                --buildbase.Player = player --设置地基的player
                buildbase.Score = 0 -- 兵力提升值
                buildbase.Sale = 0 -- 贩卖后退还金额
                buildbase.Food = 0
                local fake = CreateUnitByName("npc_dummy_build_fake", p, false, nil, nil,player:GetTeam()) --假地基 装饰用
                --local min = GetGroundPosition(p,buildbase)
                buildbase:SetOrigin(Vector(p.x,p.y,p.z+ 13))
                fake:SetOrigin(Vector(p.x,p.y,p.z+ 13))
                --buildbase:SetContextNum("player",i,0)


                playerstarts:RollBuilds(buildbase) -- （地基单位；重选哪种兵种,nil为全选；是否reroll）
                
            end

            local farmer_ent = Entities:FindByName(nil, "player_"..tostring(i).."_farmer_1") 
            local farmer = CreateUnitByName("npc_dummy_farmer", farmer_ent:GetAbsOrigin() , false, hero,hero ,player:GetTeam()) 
            table.insert(PlayerS[i].Farmer, farmer)
        end 

    end

end